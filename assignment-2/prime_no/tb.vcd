$date
	Tue Feb 07 09:12:28 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 1 ! out $end
$var reg 4 " i [3:0] $end
$scope module p0 $end
$var wire 1 # a $end
$var wire 1 $ b $end
$var wire 1 % c $end
$var wire 1 & d $end
$var wire 1 ' nota $end
$var wire 1 ( notb $end
$var wire 1 ) notc $end
$var wire 1 * notd $end
$var wire 1 ! out $end
$var wire 1 + out1 $end
$var wire 1 , out2 $end
$var wire 1 - out3 $end
$var wire 1 . out4 $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0.
0-
0,
0+
1*
1)
1(
1'
0&
0%
0$
0#
b0 "
0!
$end
#10
0*
1&
b1 "
#20
1!
0)
1+
1*
1%
0&
b10 "
#30
0*
1,
1.
1&
b11 "
#40
0!
0(
1)
0+
1*
0,
0.
1$
0%
0&
b100 "
#50
1!
0*
1-
1&
b101 "
#60
0!
0)
1*
0-
1%
0&
b110 "
#70
1!
0*
1.
1&
b111 "
#80
0!
0'
1(
1)
1*
0.
1#
0$
0%
0&
b1000 "
#90
0*
1&
b1001 "
#100
0)
1*
1%
0&
b1010 "
#110
1!
0*
1,
1&
b1011 "
#120
0!
0(
1)
1*
0,
1$
0%
0&
b1100 "
#130
1!
0*
1-
1&
b1101 "
#140
0!
0)
1*
0-
1%
0&
b1110 "
#150
0*
1&
b1111 "
#160
