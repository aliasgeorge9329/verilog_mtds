$date
	Tue Jan 31 10:45:53 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 4 ! s [3:0] $end
$var wire 4 " c [3:0] $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$scope module f0 $end
$var wire 1 % a $end
$var wire 1 & b $end
$var wire 1 ' c $end
$var wire 1 ( cout $end
$var wire 1 ) sum1 $end
$var wire 1 * s $end
$var wire 1 + cout2 $end
$var wire 1 , cout1 $end
$scope module h0 $end
$var wire 1 % a $end
$var wire 1 & b $end
$var wire 1 , cout $end
$var wire 1 ) s $end
$upscope $end
$scope module h1 $end
$var wire 1 ) a $end
$var wire 1 ' b $end
$var wire 1 + cout $end
$var wire 1 * s $end
$upscope $end
$upscope $end
$scope module f1 $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 / c $end
$var wire 1 0 cout $end
$var wire 1 1 sum1 $end
$var wire 1 2 s $end
$var wire 1 3 cout2 $end
$var wire 1 4 cout1 $end
$scope module h0 $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 4 cout $end
$var wire 1 1 s $end
$upscope $end
$scope module h1 $end
$var wire 1 1 a $end
$var wire 1 / b $end
$var wire 1 3 cout $end
$var wire 1 2 s $end
$upscope $end
$upscope $end
$scope module f2 $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var wire 1 7 c $end
$var wire 1 8 cout $end
$var wire 1 9 sum1 $end
$var wire 1 : s $end
$var wire 1 ; cout2 $end
$var wire 1 < cout1 $end
$scope module h0 $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var wire 1 < cout $end
$var wire 1 9 s $end
$upscope $end
$scope module h1 $end
$var wire 1 9 a $end
$var wire 1 7 b $end
$var wire 1 ; cout $end
$var wire 1 : s $end
$upscope $end
$upscope $end
$scope module f3 $end
$var wire 1 = a $end
$var wire 1 > b $end
$var wire 1 ? c $end
$var wire 1 @ cout $end
$var wire 1 A sum1 $end
$var wire 1 B s $end
$var wire 1 C cout2 $end
$var wire 1 D cout1 $end
$scope module h0 $end
$var wire 1 = a $end
$var wire 1 > b $end
$var wire 1 D cout $end
$var wire 1 A s $end
$upscope $end
$scope module h1 $end
$var wire 1 A a $end
$var wire 1 ? b $end
$var wire 1 C cout $end
$var wire 1 B s $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#20
$dumpvars
0D
0C
1B
1A
0@
0?
1>
0=
0<
0;
1:
09
08
17
06
05
14
03
12
01
10
1/
1.
1-
1,
0+
0*
0)
1(
0'
1&
1%
b1011 $
b11 #
b11 "
b1110 !
$end
